#|
(defcfg
	linux-dev /dev/input/by-id/usb-Corsair_CORSAIR_K65_RGB_MINI_60__Mechanical_Gaming_Keyboard_F5001901605DE321AA3518670D028020-event-kbd:/dev/input/by-path/platform-i8042-serio-0-event-kbd
	process-unmapped-keys yes
	danger-enable-cmd yes
	sequence-timeout 1000
	sequence-input-mode hidden-delay-type
    linux-continue-if-no-devs-found yes
)
|#

(defsrc
	esc  1  2  3  4  5  6  7  8  9  0  -  =  bspc
	tab  q  w  e  r  t  y  u  i  o  p  [  ]  \
	caps a  s  d  f  g  h  j  k  l  ;  '  ret
	lsft z  x  c  v  b  n  m  ,  .  /  rsft
	lctl met lalt   spc  ralt   menu rctrl
)

#|
(
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)
|#

(defalias
    etd (layer-toggle extend)
	lay (layer-toggle layers)
	;; The release part makes it so that if another key is pressed during the same time, it will trigger the hold action
	;; This means a tap from 1-1000 milliseconds is just an escape, but if during that time another key is pressed, it will go to that one
	ead (tap-hold-press 1 1000 esc @etd)
	aly (tap-hold-release 100 100 (one-shot-press 1000 ralt) @lay)

	qwt (layer-switch qwerty)
	gmg (layer-switch gaming)
	hnd (layer-switch handsdown)

	englyt (cmd ibus engine xkb:us::eng)
	jplyt (cmd ibus engine mozc-jp)

	inpsw (tap-hold 1 100 (cmd detach /home/darkkronicle/programming/scripts/ibuskbd.sh) (multi 
	  (on-press-fakekey jpinp tap)
	  (on-release-fakekey enginp tap)
	))

	zsym (tap-hold-press 1 1000 z (layer-while-held symbols))
    ;; Issues with plasma keybindings at times
    ;; pp (cmd playerctl play-pause)
    ;; next (cmd playerctl next)
    ;; prev (cmd playerctl previous)
    pp pp
    next next
    prev prev
)

(deffakekeys
  jpinp (cmd ibus engine mozc-jp)
  enginp (cmd ibus engine xkb:us::eng)
)

(defalias
	cpy C-c
	pst C-v
	quit A-f4
	mnimz M-m
	qsym (tap-hold 1 100 q (layer-while-held symbols))
	mute1 (chord mute z)
	mute2 (chord mute x)
)

(deflayer qwerty
	grv  1  2  3  4  5  6  7  8  9  0  -  =  bspc
	tab  q  w  e  r  t  y  u  i  o  p  [  ]  \
	@ead  a  s  d  f  g  h  j  k  l  ;  '  ret
	lsft z  x  c  v  b  n  m  ,  .  /  @inpsw
	lctl met lalt   spc  ralt   menu rctrl
)

;; No weird timings or anything, all it has is the caps-lock extend layer
(deflayer gaming
	grv  1  2  3  4  5  6  7  8  9  0  -  =  bspc
	tab  q  w  e  r  t  y  u  i  o  p  [  ]  \
	@ead  a  s  d  f  g  h  j  k  l  ;  '  ret
	lsft z  x  c  v  b  n  m  ,  .  /  rsft
	lctl met lalt   spc  ralt   menu rctrl
)

(defchords mute 200
  (z x) C-S-A-m
  (z  ) C-S-A-n
)


(deflayer extend
	_    f1  f2  f3  f4  f5  f6  f7  f8  f9  f10  f11 f12 _
	_    @ch1 @ch2 @ch3  _  _  _  @md1  @md2 @md3  _  _  _  _
	_    @ch4 @ch5 @ch6  _  _  lft  down  up  rght  _  _  _
	_    @mute1 @mute2 @cpy @pst  _ _  @englyt @jplyt _  _  _
	_    _   @aly      _    _      _    _
)

(deflayer layers
	lrld    @qwt  @gmg  @hnd  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _ _  _  _  _  _ _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)


(defchords media 300
  ;; (1 2 3)
  ;; (1   3) 
  (1 2  ) @prev
  (  2 3) @next
  (  2  ) @pp 
  (    3) volu
  (1    ) voldwn
)

;; 1 2 3
;; 4 5 6
(defchords win 100
  ;; (  2 3       ) M-C-rght
  ;; (1 2         ) M-C-lft
  (1 2 3       ) A-f4
  (1   3       ) M-m
  (    3       ) M-C-l
  (  2 3       ) M-C-k
  (1           ) M-g
  (  2         ) M-C-up
  ;; (    3       ) M-C-s
  (       4    ) M-C-lft
  (         5  ) M-C-down
  (           6) M-C-rght
  (       4 5 6) M-f
)

(defalias
  ch1 (chord win 1)
  ch2 (chord win 2)
  ch3 (chord win 3)
  ch4 (chord win 4)
  ch5 (chord win 5)
  ch6 (chord win 6)
  md1 (chord media 1)
  md2 (chord media 2)
  md3 (chord media 3)
  windows C-A-S-k
  launcher C-A-S-j
)


#|
                   Alpha Layer
 ╭─────────────────────╮ ╭─────────────────────╮
 │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
 │ LM4 LM3 LM2 LM1 LM0 │ │ RT0 RM1 RM2 RM3 RM4 │
 │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
 ╰───────────╮ LH2 LH1 │ │ RH1 RH2  ╭──────────╯
             ╰─────────╯ ╰──────────╯
              Hands Down Neu
 ╭─────────────────────╮ ╭─────────────────────╮
 │  W   F   M   P   V  │ │  #$  .:  /*  "[  '] │
 │  R   S   N   T   B  | |  ,;   A   E   I   H │
 │  X   C   L   D   G  │ │  -+   U   O   Y   K │
 ╰───────────╮ TAB BSP │ │ SPC  RET ╭──────────╯
             ╰─────────╯ ╰──────────╯

<[({ + linger = })]>

(swap these)

U + Y = Qu (linger = Q)

Combos:
H-digraph
N + T = th
S + T = ch
R + S = wh
S + N = sh
M + P = ph
D + G = gh


Adaptive Keys:
left hand
PB -> PM
DB -> DL
PM -> PL
FM -> FL
WM -> LM
GD -> GL
FP -> LP
WP -> lml (calmly)
VP -> VL
TG -> TN
DG -> LG
BT -> BL
GT -> ghto

right hand
AE -> AU
EH -> EO
OH -> OE (?)
UH -> UA

YK -> YI
KU -> QU
|#

(deffakekeys
  sft lsft
)

(defalias

   fsft (multi (on-press-fakekey sft press) (on-release-fakekey sft release) (layer-while-held handsdown-shft))
   adk (multi 
      a 
      (on-press-fakekey fk-aadaptive press)
	  (macro 150 (on-press-fakekey fk-aadaptive release))
   )
   edk (multi 
      e 
      (on-press-fakekey fk-eadaptive press)
	  (macro 150 (on-press-fakekey fk-eadaptive release))
   )
   odk (multi 
      o 
      (on-press-fakekey fk-oadaptive press)
	  (macro 150 (on-press-fakekey fk-oadaptive release))
   )
   udk (multi 
   	  u
      (on-press-fakekey fk-uadaptive press)
	  (macro 150 (on-press-fakekey fk-uadaptive release))
   )
   tdk (multi 
   	  t
      (on-press-fakekey fk-stadaptive press)
	  (macro 150 (on-press-fakekey fk-stadaptive release))
   )
   sdk (multi 
   	  s
      (on-press-fakekey fk-stadaptive press)
	  (macro 150 (on-press-fakekey fk-stadaptive release))
   )

   leadhold (multi (on-press-fakekey lead tap) (on-release-fakekey stop tap))
   tl (multi 
       @leadhold
	   (macro 10 t)
	)
   sl (multi 
       @leadhold
	   (macro 10 s)
	)
	
	xs (macro (sequence 150) x)
	ks (macro (sequence 150) k)
	wy (tap-hold 1 100 w (layer-while-held symbols))
	ctrlt (tap-dance 500 (lctl (multi (layer-while-held qwerty) lctl))) 

	— (unicode —)
)

(deflayer handsdown
	grv  1  2  3  4  5  6  7  8  9  0  -  =  bspc
	tab  w  f  m  p  v  /  .  ,  S-'  '  [  ]  \
	@ead  r  @sdk n  @tdk g  ;  @adk  @edk  i  h  j  ret
	@fsft @xs c  l  d  b  ;  @udk  @odk  y  @ks  @inpsw
	@ctrlt met lalt   spc  ralt   menu rctrl
)

(deflayer symbols
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  S-[  S-]  _  _  _  _  _
	_    _  _  _  (tap-hold 1 150 - @—) _ S-, S-9 S-0  S-.  _  _  _
	_    _  _  _  _  _  _  [  ]  _  _  _
	_    _   _      _    _      _    _
)

(deflayer handsdown-shft 
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)


(defseq 
	ku-adaptive (k u)
	kuk-adaptive (k w)
	xc-adaptive (x c)
	th-combo (t n)
	sh-combo (s n)
)

(deflayer stadaptive
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  h  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)

(deflayer eadaptive
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  o  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)

(deflayer aadaptive
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  u  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)

(deflayer uadaptive
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  a  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)

(deflayer oadaptive
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  _  _  _  _
	_    _  _  _  _  _  _  _  _  _  e  _  _
	_    _  _  _  _  _  _  _  _  _  _  _
	_    _   _      _    _      _    _
)


;; https://github.com/jtroo/kanata/discussions/481 
(deffakekeys 
    lead (sequence 500)
    stop scnl

	fk-aadaptive (layer-while-held aadaptive)
	fk-eadaptive (layer-while-held eadaptive)
	fk-uadaptive (layer-while-held uadaptive)
	fk-stadaptive (layer-while-held stadaptive)
	fk-oadaptive (layer-while-held oadaptive)

	ku-adaptive (macro q (on-press-fakekey sft release) u)
	xc-adaptive z
	kuk-adaptive q

	th-combo (macro t (on-press-fakekey sft release) h)
	sh-combo (macro s (on-press-fakekey sft release) h)
)	

